[{"name":"app.R","content":"library(shiny)\r\nlibrary(quantmod)\r\nlibrary(ggplot2)\r\nlibrary(plotly)\r\n\r\n# Define UI for application\r\nui <- fluidPage(\r\n  titlePanel(\"Stock Prices for the Last 2 Years\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      selectInput(\"stock\", \"Choose a stock:\", \r\n                  choices = c(\"AAPL\", \"GOOG\", \"MSFT\", \"AMZN\")),\r\n      actionButton(\"update\", \"Update\")\r\n    ),\r\n    mainPanel(\r\n      plotlyOutput(\"stockPlot\")\r\n    )\r\n  )\r\n)\r\n\r\n# Define server logic\r\nserver <- function(input, output) {\r\n  stockData <- eventReactive(input$update, {\r\n    getSymbols(input$stock, src = \"yahoo\", from = Sys.Date() - 2*365, auto.assign = FALSE)\r\n  })\r\n  \r\n  output$stockPlot <- renderPlotly({\r\n    stock <- stockData()\r\n    stock_df <- data.frame(Date = index(stock), coredata(stock))\r\n    \r\n    p <- ggplot(stock_df, aes(x = Date)) +\r\n      geom_line(aes(y = Cl(stock)), color = \"blue\") +\r\n      labs(title = paste(input$stock, \"Stock Prices\"), x = \"Date\", y = \"Closing Price\") +\r\n      theme_minimal()\r\n    \r\n    ggplotly(p)\r\n  })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
